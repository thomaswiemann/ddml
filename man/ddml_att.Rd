% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ddml_att.R
\name{ddml_att}
\alias{ddml_att}
\title{Estimator of the Average Treatment Effect on the Treated.}
\usage{
ddml_att(
  y,
  D,
  X,
  learners,
  learners_DX = learners,
  sample_folds = 2,
  ensemble_type = "nnls",
  shortstack = FALSE,
  cv_folds = 5,
  subsamples_D0 = NULL,
  subsamples_D1 = NULL,
  cv_subsamples_list_D0 = NULL,
  cv_subsamples_list_D1 = NULL,
  silent = FALSE
)
}
\arguments{
\item{y}{The outcome variable.}

\item{D}{Binary endogenous variable of interest.}

\item{X}{A (sparse) matrix of control variables.}

\item{learners}{May take one of two forms, depending on whether a single
learner or stacking with multiple learners is used for estimation of the
conditional expectation functions.
If a single learner is used, \code{learners} is a list with two named
elements:
\itemize{
\item{\code{what} The base learner function. The function must be
such that it predicts a named input \code{y} using a named input
\code{X}.}
\item{\code{args} Optional arguments to be passed to \code{what}.}
}
If stacking with multiple learners is used, \code{learners} is a list of
lists, each containing four named elements:
\itemize{
\item{\code{fun} The base learner function. The function must be
such that it predicts a named input \code{y} using a named input
\code{X}.}
\item{\code{args} Optional arguments to be passed to \code{fun}.}
\item{\code{assign_X} An optional vector of column indices
corresponding to control variables in \code{X} that are passed to
the base learner.}
}
Omission of the \code{args} element results in default arguments being
used in \code{fun}. Omission of \code{assign_X} results in inclusion of
all variables in \code{X}.}

\item{learners_DX}{Optional argument to allow for different estimators of
\eqn{E[D|X]}. Setup is identical to \code{learners}.}

\item{sample_folds}{Number of cross-fitting folds.}

\item{ensemble_type}{Ensemble method to combine base learners into final
estimate of the conditional expectation functions. Possible values are:
\itemize{
\item{\code{"nnls"} Non-negative least squares.}
\item{\code{"nnls1"} Non-negative least squares with the constraint
that all weights sum to one.}
\item{\code{"singlebest"} Select base learner with minimum MSPE.}
\item{\code{"ols"} Ordinary least squares.}
\item{\code{"average"} Simple average over base learners.}
}
Multiple ensemble types may be passed as a vector of strings.}

\item{shortstack}{Boolean to use short-stacking.}

\item{cv_folds}{Number of folds used for cross-validation in ensemble
construction.}

\item{subsamples_D0, subsamples_D1}{List of vectors with sample indices for
cross-fitting, corresponding to untreated and treated observations,
respectively.}

\item{cv_subsamples_list_D0, cv_subsamples_list_D1}{List of lists, each
corresponding to a subsample containing vectors with subsample indices
for cross-validation. Arguments are separated for untreated and treated
observations, respectively.}

\item{silent}{Boolean to silence estimation updates.}
}
\value{
\code{ddml_att} returns an object of S3 class
\code{ddml_att}. An object of class \code{ddml_att} is a list containing
the following components:
\describe{
\item{\code{att}}{A vector with the average treatment effect
on the treated estimates.}
\item{\code{weights}}{A list of matrices, providing the weight
assigned to each base learner (in chronological order) by the
ensemble procedure.}
\item{\code{mspe}}{A list of matrices, providing the MSPE of each
base learner (in chronological order) computed by the
cross-validation step in the ensemble construction.}
\item{\code{psi_a}, \code{psi_b}}{Matrices needed for the computation
of scores. Used in \code{\link[=summary.ddml_att]{summary.ddml_att()}}.}
\item{\code{learners},\code{learners_DX},
\code{subsamples_D0},\code{cv_subsamples_list_D0},
\code{ensemble_type}}{Pass-through of
selected user-provided arguments. See above.}
}
}
\description{
Estimator of the average treatment effect on the treated.
}
\details{
\code{ddml_att} provides a double/debiased machine learning
estimator for the average treatment effect on the treated in the
interactive model given by

\eqn{Y = g_0(D, X) + U,}

where \eqn{(Y, D, X, U)} is a random vector such that
\eqn{\operatorname{supp} D = \{0,1\}}, \eqn{E[U\vert D, X] = 0}, and
\eqn{\Pr(D=1\vert X) \in (0, 1)} with probability 1,
and \eqn{g_0} is an unknown nuisance function.

In this model, the average treatment effect on the treated is defined as

\eqn{\theta_0^{\textrm{ATT}} \equiv E[g_0(1, X) - g_0(0, X) \vert D = 1]}.
}
\examples{
# Construct variables from the included Angrist & Evans (1998) data
y = AE98[, "worked"]
D = AE98[, "morekids"]
X = AE98[, c("age","agefst","black","hisp","othrace","educ")]

# Estimate the average treatment effect on the treated using a single base
#     learner, ridge.
att_fit <- ddml_att(y, D, X,
                    learners = list(what = mdl_glmnet,
                                    args = list(alpha = 0)),
                    sample_folds = 2,
                    silent = TRUE)
summary(att_fit)

# Estimate the average treatment effect on the treated using short-stacking
#     with base learners ols, lasso, and ridge.
att_fit <- ddml_att(y, D, X,
                    learners = list(list(fun = ols),
                                    list(fun = mdl_glmnet),
                                    list(fun = mdl_glmnet,
                                         args = list(alpha = 0))),
                    ensemble_type = 'nnls',
                    shortstack = TRUE,
                    sample_folds = 2,
                    silent = TRUE)
summary(att_fit)
}
\references{
Ahrens A, Hansen C B, Schaffer M E, Wiemann T (2023). "ddml: Double/debiased
machine learning in Stata." \url{https://arxiv.org/abs/2301.09397}

Chernozhukov V, Chetverikov D, Demirer M, Duflo E, Hansen C B, Newey W,
Robins J (2018). "Double/debiased machine learning for treatment and
structural parameters." The Econometrics Journal, 21(1), C1-C68.

Wolpert D H (1992). "Stacked generalization." Neural Networks, 5(2), 241-259.
}
\seealso{
\code{\link[=summary.ddml_att]{summary.ddml_att()}}

Other ddml: 
\code{\link{ddml_ate}()},
\code{\link{ddml_fpliv}()},
\code{\link{ddml_late}()},
\code{\link{ddml_pliv}()},
\code{\link{ddml_plm}()}
}
\concept{ddml}
