% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_CEF.R
\name{get_CEF}
\alias{get_CEF}
\title{Wrapper for \code{\link[=crosspred]{crosspred()}} and \code{\link[=shortstacking]{shortstacking()}}.}
\usage{
get_CEF(
  y,
  X,
  Z = NULL,
  learners,
  ensemble_type,
  shortstack,
  compute_insample_predictions = FALSE,
  compute_predictions_bylearner = FALSE,
  subsamples,
  cv_subsamples_list,
  silent = FALSE,
  progress = NULL,
  auxilliary_X = NULL,
  shortstack_y = y
)
}
\arguments{
\item{y}{The outcome variable.}

\item{X}{A (sparse) matrix of predictive variables.}

\item{Z}{Optional additional (sparse) matrix of predictive variables.}

\item{learners}{May take one of two forms, depending on whether a single
learner or stacking with multiple learners is used for estimation of the
predictor.
If a single learner is used, \code{learners} is a list with two named
elements:
\itemize{
\item{\code{what} The base learner function. The function must be
such that it predicts a named input \code{y} using a named input
\code{X}.}
\item{\code{args} Optional arguments to be passed to \code{what}.}
}
If stacking with multiple learners is used, \code{learners} is a list of
lists, each containing four named elements:
\itemize{
\item{\code{fun} The base learner function. The function must be
such that it predicts a named input \code{y} using a named input
\code{X}.}
\item{\code{args} Optional arguments to be passed to \code{fun}.}
\item{\code{assign_X} An optional vector of column indices
corresponding to predictive variables in \code{X} that are passed to
the base learner.}
\item{\code{assign_Z} An optional vector of column indices
corresponding to predictive in \code{Z} that are passed to the
base learner.}
}
Omission of the \code{args} element results in default arguments being
used in \code{fun}. Omission of \code{assign_X} (and/or \code{assign_Z})
results in inclusion of all variables in \code{X} (and/or \code{Z}).}

\item{ensemble_type}{Ensemble method to combine base learners into final
estimate of the conditional expectation functions. Possible values are:
\itemize{
\item{\code{"nnls"} Non-negative least squares.}
\item{\code{"nnls1"} Non-negative least squares with the constraint
that all weights sum to one.}
\item{\code{"singlebest"} Select base learner with minimum MSPE.}
\item{\code{"ols"} Ordinary least squares.}
\item{\code{"average"} Simple average over base learners.}
}
Multiple ensemble types may be passed as a vector of strings.}

\item{shortstack}{Boolean to use short-stacking.}

\item{compute_insample_predictions}{Indicator equal to 1 if in-sample
predictions should also be computed.}

\item{subsamples}{List of vectors with sample indices for cross-fitting.}

\item{silent}{Boolean to silence estimation updates.}

\item{progress}{String to print before learner and cv fold progress.}

\item{auxilliary_X}{An optional list of matrices of length
\code{sample_folds}, each containing additional observations to calculate
predictions for.}

\item{shortstack_y}{Optional vector of the outcome variable to form
short-stacking predictions for. Base learners are always trained on
\code{y}.}
}
\value{
\code{get_CEF} returns a list containing the following components:
\describe{
\item{\code{oos_fitted}}{A matrix of out-of-sample predictions,
each column corresponding to an ensemble type (in chronological
order).}
\item{\code{weights}}{An array, providing the weight
assigned to each base learner (in chronological order) by the
ensemble procedures.}
\item{\code{is_fitted}}{When \code{compute_insample_predictions = T}.
a list of matrices with in-sample predictions by sample fold.}
\item{\code{auxilliary_fitted}}{When \code{auxilliary_X} is not
\code{NULL}, a list of matrices with additional predictions.}
\item{\code{oos_fitted_bylearner}}{When
\code{compute_predictions_bylearner = T}, a matrix of
out-of-sample predictions, each column corresponding to a base
learner (in chronological order).}
\item{\code{is_fitted_bylearner}}{When
\code{compute_insample_predictions = T} and
\code{compute_predictions_bylearner = T}, a list of matrices with
in-sample predictions by sample fold.}
\item{\code{auxilliary_fitted_bylearner}}{When \code{auxilliary_X} is
not \code{NULL} and \code{compute_predictions_bylearner = T}, a
list of matrices with additional predictions for each learner.}
}
}
\description{
Wrapper for \code{\link[=crosspred]{crosspred()}} and \code{\link[=shortstacking]{shortstacking()}}.
}
\seealso{
Other utilities: 
\code{\link{crosspred}()},
\code{\link{crossval}()},
\code{\link{shortstacking}()}
}
\concept{utilities}
